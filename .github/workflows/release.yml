name: Build CLIs and Upload Them as Release Assets

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cli: [fitactivity, fitconv]
        os: [linux, macOS, windows]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.18"

      - name: Build [macOS]
        if: matrix.os == 'macOS'
        run: |
          CGO=0 GOOS=darwin GOARCH=$arch go build -ldflags="-s -w" -trimpath -o $cli cmd/$cli/main.go
          zip -q $cli-$os-$arch.zip $cli
          rm $cli
          printf "sha256: %s\n" "$(shasum -a 256 $cli-$os-$arch.zip)"
        env:
          cli: ${{ matrix.cli }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}

      - name: Build [windows]
        if: matrix.os == 'windows'
        run: |
          CGO=0 GOOS=$os GOARCH=$arch go build -ldflags="-s -w" -trimpath -o $cli.exe cmd/$cli/main.go
          zip -q $cli-$os-$arch.zip $cli.exe
          rm $cli.exe
          printf "sha256: %s\n" "$(shasum -a 256 $cli-$os-$arch.zip)"
        env:
          cli: ${{ matrix.cli }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}

      - name: Build [linux]
        if: matrix.os == 'linux'
        run: |
          CGO=0 GOOS=$os GOARCH=$arch go build -ldflags="-s -w" -trimpath -o $cli cmd/$cli/main.go
          tar -czf $cli-$os-$arch.tar.gz $cli
          rm $cli
          printf "sha256: %s\n" "$(shasum -a 256 $cli-$os-$arch.tar.gz)"
        env:
          cli: ${{ matrix.cli }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}

      - name: Upload Release Assets [macOS and windows]
        if: startsWith(github.ref, 'refs/tags/v') && (matrix.os == 'macOS' || matrix.os == 'windows')
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.cli }}-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_name: ${{ matrix.cli }}-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_content_type: application/octet-stream

      - name: Upload Release Assets [linux]
        if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'linux'
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.cli }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_name: ${{ matrix.cli }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/octet-stream
