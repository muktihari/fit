// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package factory

import (
	"github.com/muktihari/fit/profile/typedef"
	"github.com/muktihari/fit/proto"
)

var std = New()

// StandardFactory returns standard factory.
func StandardFactory() *Factory { return std }

// CreateMesg creates new message based on defined messages in the factory. If not found, it returns proto.Message{Num: num}.
//
// This will create a shallow copy of the Fields, so changing any value declared in Field's FieldBase is prohibited
// (except in case of unknown field).
//
// NOTE: This method is not used by either the Decoder or the Encoder, and the data will only be populated once upon the first invocation.
// Unless you need most of the returned fields, it's recommended create an empty proto.Message{Num: num} then fill only the necessary fields
// using CreateField method.
func CreateMesg(num typedef.MesgNum) proto.Message {
	return std.CreateMesg(num)
}

// CreateField creates new field based on defined messages in the factory. If not found, it returns new field with "unknown" name.
//
// The returned field contains a pointer reference to FieldBase defined in the factory, so changing any value
// declared in FieldBase is prohibited (except in the case of unknown field).
func CreateField(mesgNum typedef.MesgNum, num byte) proto.Field {
	return std.CreateField(mesgNum, num)
}

// RegisterMesg registers a new message that is not defined in the profile.xlsx.
// You can not edit or replace existing predefined messages in the factory, you can only edit the messages you have registered.
// Please note, we don't use mutex for efficiency, since this is intended to be used on instantiation.
//
// By registering, any FIT file containing these messages can be recognized instead of returning "unknown" message.
func RegisterMesg(mesg proto.Message) error {
	return std.RegisterMesg(mesg)
}
