// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type AutolapTrigger byte

const (
	AutolapTriggerTime             AutolapTrigger = 0
	AutolapTriggerDistance         AutolapTrigger = 1
	AutolapTriggerPositionStart    AutolapTrigger = 2
	AutolapTriggerPositionLap      AutolapTrigger = 3
	AutolapTriggerPositionWaypoint AutolapTrigger = 4
	AutolapTriggerPositionMarked   AutolapTrigger = 5
	AutolapTriggerOff              AutolapTrigger = 6
	AutolapTriggerInvalid          AutolapTrigger = 0xFF
)

func (a AutolapTrigger) String() string {
	switch a {
	case AutolapTriggerTime:
		return "time"
	case AutolapTriggerDistance:
		return "distance"
	case AutolapTriggerPositionStart:
		return "position_start"
	case AutolapTriggerPositionLap:
		return "position_lap"
	case AutolapTriggerPositionWaypoint:
		return "position_waypoint"
	case AutolapTriggerPositionMarked:
		return "position_marked"
	case AutolapTriggerOff:
		return "off"
	default:
		return "AutolapTriggerInvalid(" + strconv.Itoa(int(a)) + ")"
	}
}

// FromString parse string into AutolapTrigger constant it's represent, return AutolapTriggerInvalid if not found.
func AutolapTriggerFromString(s string) AutolapTrigger {
	switch s {
	case "time":
		return AutolapTriggerTime
	case "distance":
		return AutolapTriggerDistance
	case "position_start":
		return AutolapTriggerPositionStart
	case "position_lap":
		return AutolapTriggerPositionLap
	case "position_waypoint":
		return AutolapTriggerPositionWaypoint
	case "position_marked":
		return AutolapTriggerPositionMarked
	case "off":
		return AutolapTriggerOff
	default:
		return AutolapTriggerInvalid
	}
}

// List returns all constants.
func ListAutolapTrigger() []AutolapTrigger {
	return []AutolapTrigger{
		AutolapTriggerTime,
		AutolapTriggerDistance,
		AutolapTriggerPositionStart,
		AutolapTriggerPositionLap,
		AutolapTriggerPositionWaypoint,
		AutolapTriggerPositionMarked,
		AutolapTriggerOff,
	}
}
