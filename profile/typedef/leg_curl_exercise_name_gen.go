// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type LegCurlExerciseName uint16

const (
	LegCurlExerciseNameLegCurl                     LegCurlExerciseName = 0
	LegCurlExerciseNameWeightedLegCurl             LegCurlExerciseName = 1
	LegCurlExerciseNameGoodMorning                 LegCurlExerciseName = 2
	LegCurlExerciseNameSeatedBarbellGoodMorning    LegCurlExerciseName = 3
	LegCurlExerciseNameSingleLegBarbellGoodMorning LegCurlExerciseName = 4
	LegCurlExerciseNameSingleLegSlidingLegCurl     LegCurlExerciseName = 5
	LegCurlExerciseNameSlidingLegCurl              LegCurlExerciseName = 6
	LegCurlExerciseNameSplitBarbellGoodMorning     LegCurlExerciseName = 7
	LegCurlExerciseNameSplitStanceExtension        LegCurlExerciseName = 8
	LegCurlExerciseNameStaggeredStanceGoodMorning  LegCurlExerciseName = 9
	LegCurlExerciseNameSwissBallHipRaiseAndLegCurl LegCurlExerciseName = 10
	LegCurlExerciseNameZercherGoodMorning          LegCurlExerciseName = 11
	LegCurlExerciseNameInvalid                     LegCurlExerciseName = 0xFFFF // INVALID
)

var legcurlexercisenametostrs = map[LegCurlExerciseName]string{
	LegCurlExerciseNameLegCurl:                     "leg_curl",
	LegCurlExerciseNameWeightedLegCurl:             "weighted_leg_curl",
	LegCurlExerciseNameGoodMorning:                 "good_morning",
	LegCurlExerciseNameSeatedBarbellGoodMorning:    "seated_barbell_good_morning",
	LegCurlExerciseNameSingleLegBarbellGoodMorning: "single_leg_barbell_good_morning",
	LegCurlExerciseNameSingleLegSlidingLegCurl:     "single_leg_sliding_leg_curl",
	LegCurlExerciseNameSlidingLegCurl:              "sliding_leg_curl",
	LegCurlExerciseNameSplitBarbellGoodMorning:     "split_barbell_good_morning",
	LegCurlExerciseNameSplitStanceExtension:        "split_stance_extension",
	LegCurlExerciseNameStaggeredStanceGoodMorning:  "staggered_stance_good_morning",
	LegCurlExerciseNameSwissBallHipRaiseAndLegCurl: "swiss_ball_hip_raise_and_leg_curl",
	LegCurlExerciseNameZercherGoodMorning:          "zercher_good_morning",
	LegCurlExerciseNameInvalid:                     "invalid",
}

func (l LegCurlExerciseName) String() string {
	val, ok := legcurlexercisenametostrs[l]
	if !ok {
		return strconv.FormatUint(uint64(l), 10)
	}
	return val
}

var strtolegcurlexercisename = func() map[string]LegCurlExerciseName {
	m := make(map[string]LegCurlExerciseName)
	for t, str := range legcurlexercisenametostrs {
		m[str] = LegCurlExerciseName(t)
	}
	return m
}()

// FromString parse string into LegCurlExerciseName constant it's represent, return LegCurlExerciseNameInvalid if not found.
func LegCurlExerciseNameFromString(s string) LegCurlExerciseName {
	val, ok := strtolegcurlexercisename[s]
	if !ok {
		return strtolegcurlexercisename["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListLegCurlExerciseName() []LegCurlExerciseName {
	vs := make([]LegCurlExerciseName, 0, len(legcurlexercisenametostrs))
	for i := range legcurlexercisenametostrs {
		vs = append(vs, LegCurlExerciseName(i))
	}
	return vs
}
