// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type SledExerciseName uint16

const (
	SledExerciseNameBackwardDrag SledExerciseName = 0
	SledExerciseNameChestPress   SledExerciseName = 1
	SledExerciseNameForwardDrag  SledExerciseName = 2
	SledExerciseNameLowPush      SledExerciseName = 3
	SledExerciseNamePush         SledExerciseName = 4
	SledExerciseNameRow          SledExerciseName = 5
	SledExerciseNameInvalid      SledExerciseName = 0xFFFF
)

func (s SledExerciseName) Uint16() uint16 { return uint16(s) }

func (s SledExerciseName) String() string {
	switch s {
	case SledExerciseNameBackwardDrag:
		return "backward_drag"
	case SledExerciseNameChestPress:
		return "chest_press"
	case SledExerciseNameForwardDrag:
		return "forward_drag"
	case SledExerciseNameLowPush:
		return "low_push"
	case SledExerciseNamePush:
		return "push"
	case SledExerciseNameRow:
		return "row"
	default:
		return "SledExerciseNameInvalid(" + strconv.FormatUint(uint64(s), 10) + ")"
	}
}

// FromString parse string into SledExerciseName constant it's represent, return SledExerciseNameInvalid if not found.
func SledExerciseNameFromString(s string) SledExerciseName {
	switch s {
	case "backward_drag":
		return SledExerciseNameBackwardDrag
	case "chest_press":
		return SledExerciseNameChestPress
	case "forward_drag":
		return SledExerciseNameForwardDrag
	case "low_push":
		return SledExerciseNameLowPush
	case "push":
		return SledExerciseNamePush
	case "row":
		return SledExerciseNameRow
	default:
		return SledExerciseNameInvalid
	}
}

// List returns all constants.
func ListSledExerciseName() []SledExerciseName {
	return []SledExerciseName{
		SledExerciseNameBackwardDrag,
		SledExerciseNameChestPress,
		SledExerciseNameForwardDrag,
		SledExerciseNameLowPush,
		SledExerciseNamePush,
		SledExerciseNameRow,
	}
}
