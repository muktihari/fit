// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type MaxMetSpeedSource byte

const (
	MaxMetSpeedSourceOnboardGps   MaxMetSpeedSource = 0
	MaxMetSpeedSourceConnectedGps MaxMetSpeedSource = 1
	MaxMetSpeedSourceCadence      MaxMetSpeedSource = 2
	MaxMetSpeedSourceInvalid      MaxMetSpeedSource = 0xFF // INVALID
)

var maxmetspeedsourcetostrs = map[MaxMetSpeedSource]string{
	MaxMetSpeedSourceOnboardGps:   "onboard_gps",
	MaxMetSpeedSourceConnectedGps: "connected_gps",
	MaxMetSpeedSourceCadence:      "cadence",
	MaxMetSpeedSourceInvalid:      "invalid",
}

func (m MaxMetSpeedSource) String() string {
	val, ok := maxmetspeedsourcetostrs[m]
	if !ok {
		return strconv.Itoa(int(m))
	}
	return val
}

var strtomaxmetspeedsource = func() map[string]MaxMetSpeedSource {
	m := make(map[string]MaxMetSpeedSource)
	for t, str := range maxmetspeedsourcetostrs {
		m[str] = MaxMetSpeedSource(t)
	}
	return m
}()

// FromString parse string into MaxMetSpeedSource constant it's represent, return MaxMetSpeedSourceInvalid if not found.
func MaxMetSpeedSourceFromString(s string) MaxMetSpeedSource {
	val, ok := strtomaxmetspeedsource[s]
	if !ok {
		return strtomaxmetspeedsource["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListMaxMetSpeedSource() []MaxMetSpeedSource {
	vs := make([]MaxMetSpeedSource, 0, len(maxmetspeedsourcetostrs))
	for i := range maxmetspeedsourcetostrs {
		vs = append(vs, MaxMetSpeedSource(i))
	}
	return vs
}
