// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type BleDeviceType uint8

const (
	BleDeviceTypeConnectedGps     BleDeviceType = 0 // GPS that is provided over a proprietary bluetooth service
	BleDeviceTypeHeartRate        BleDeviceType = 1
	BleDeviceTypeBikePower        BleDeviceType = 2
	BleDeviceTypeBikeSpeedCadence BleDeviceType = 3
	BleDeviceTypeBikeSpeed        BleDeviceType = 4
	BleDeviceTypeBikeCadence      BleDeviceType = 5
	BleDeviceTypeFootpod          BleDeviceType = 6
	BleDeviceTypeBikeTrainer      BleDeviceType = 7 // Indoor-Bike FTMS protocol
	BleDeviceTypeInvalid          BleDeviceType = 0xFF
)

func (b BleDeviceType) Uint8() uint8 { return uint8(b) }

func (b BleDeviceType) String() string {
	switch b {
	case BleDeviceTypeConnectedGps:
		return "connected_gps"
	case BleDeviceTypeHeartRate:
		return "heart_rate"
	case BleDeviceTypeBikePower:
		return "bike_power"
	case BleDeviceTypeBikeSpeedCadence:
		return "bike_speed_cadence"
	case BleDeviceTypeBikeSpeed:
		return "bike_speed"
	case BleDeviceTypeBikeCadence:
		return "bike_cadence"
	case BleDeviceTypeFootpod:
		return "footpod"
	case BleDeviceTypeBikeTrainer:
		return "bike_trainer"
	default:
		return "BleDeviceTypeInvalid(" + strconv.FormatUint(uint64(b), 10) + ")"
	}
}

// FromString parse string into BleDeviceType constant it's represent, return BleDeviceTypeInvalid if not found.
func BleDeviceTypeFromString(s string) BleDeviceType {
	switch s {
	case "connected_gps":
		return BleDeviceTypeConnectedGps
	case "heart_rate":
		return BleDeviceTypeHeartRate
	case "bike_power":
		return BleDeviceTypeBikePower
	case "bike_speed_cadence":
		return BleDeviceTypeBikeSpeedCadence
	case "bike_speed":
		return BleDeviceTypeBikeSpeed
	case "bike_cadence":
		return BleDeviceTypeBikeCadence
	case "footpod":
		return BleDeviceTypeFootpod
	case "bike_trainer":
		return BleDeviceTypeBikeTrainer
	default:
		return BleDeviceTypeInvalid
	}
}

// List returns all constants.
func ListBleDeviceType() []BleDeviceType {
	return []BleDeviceType{
		BleDeviceTypeConnectedGps,
		BleDeviceTypeHeartRate,
		BleDeviceTypeBikePower,
		BleDeviceTypeBikeSpeedCadence,
		BleDeviceTypeBikeSpeed,
		BleDeviceTypeBikeCadence,
		BleDeviceTypeFootpod,
		BleDeviceTypeBikeTrainer,
	}
}
