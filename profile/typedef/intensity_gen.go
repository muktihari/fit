// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type Intensity byte

const (
	IntensityActive   Intensity = 0
	IntensityRest     Intensity = 1
	IntensityWarmup   Intensity = 2
	IntensityCooldown Intensity = 3
	IntensityRecovery Intensity = 4
	IntensityInterval Intensity = 5
	IntensityOther    Intensity = 6
	IntensityInvalid  Intensity = 0xFF
)

func (i Intensity) Byte() byte { return byte(i) }

func (i Intensity) String() string {
	switch i {
	case IntensityActive:
		return "active"
	case IntensityRest:
		return "rest"
	case IntensityWarmup:
		return "warmup"
	case IntensityCooldown:
		return "cooldown"
	case IntensityRecovery:
		return "recovery"
	case IntensityInterval:
		return "interval"
	case IntensityOther:
		return "other"
	default:
		return "IntensityInvalid(" + strconv.Itoa(int(i)) + ")"
	}
}

// FromString parse string into Intensity constant it's represent, return IntensityInvalid if not found.
func IntensityFromString(s string) Intensity {
	switch s {
	case "active":
		return IntensityActive
	case "rest":
		return IntensityRest
	case "warmup":
		return IntensityWarmup
	case "cooldown":
		return IntensityCooldown
	case "recovery":
		return IntensityRecovery
	case "interval":
		return IntensityInterval
	case "other":
		return IntensityOther
	default:
		return IntensityInvalid
	}
}

// List returns all constants.
func ListIntensity() []Intensity {
	return []Intensity{
		IntensityActive,
		IntensityRest,
		IntensityWarmup,
		IntensityCooldown,
		IntensityRecovery,
		IntensityInterval,
		IntensityOther,
	}
}
