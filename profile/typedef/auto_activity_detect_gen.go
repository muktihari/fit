// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type AutoActivityDetect uint32

const (
	AutoActivityDetectNone       AutoActivityDetect = 0x00000000
	AutoActivityDetectRunning    AutoActivityDetect = 0x00000001
	AutoActivityDetectCycling    AutoActivityDetect = 0x00000002
	AutoActivityDetectSwimming   AutoActivityDetect = 0x00000004
	AutoActivityDetectWalking    AutoActivityDetect = 0x00000008
	AutoActivityDetectElliptical AutoActivityDetect = 0x00000020
	AutoActivityDetectSedentary  AutoActivityDetect = 0x00000400
	AutoActivityDetectInvalid    AutoActivityDetect = 0xFFFFFFFF // INVALID
)

var autoactivitydetecttostrs = map[AutoActivityDetect]string{
	AutoActivityDetectNone:       "none",
	AutoActivityDetectRunning:    "running",
	AutoActivityDetectCycling:    "cycling",
	AutoActivityDetectSwimming:   "swimming",
	AutoActivityDetectWalking:    "walking",
	AutoActivityDetectElliptical: "elliptical",
	AutoActivityDetectSedentary:  "sedentary",
	AutoActivityDetectInvalid:    "invalid",
}

func (a AutoActivityDetect) String() string {
	val, ok := autoactivitydetecttostrs[a]
	if !ok {
		return strconv.FormatUint(uint64(a), 10)
	}
	return val
}

var strtoautoactivitydetect = func() map[string]AutoActivityDetect {
	m := make(map[string]AutoActivityDetect)
	for t, str := range autoactivitydetecttostrs {
		m[str] = AutoActivityDetect(t)
	}
	return m
}()

// FromString parse string into AutoActivityDetect constant it's represent, return AutoActivityDetectInvalid if not found.
func AutoActivityDetectFromString(s string) AutoActivityDetect {
	val, ok := strtoautoactivitydetect[s]
	if !ok {
		return strtoautoactivitydetect["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListAutoActivityDetect() []AutoActivityDetect {
	vs := make([]AutoActivityDetect, 0, len(autoactivitydetecttostrs))
	for i := range autoactivitydetecttostrs {
		vs = append(vs, AutoActivityDetect(i))
	}
	return vs
}
