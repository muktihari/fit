// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type MaxMetCategory byte

const (
	MaxMetCategoryGeneric MaxMetCategory = 0
	MaxMetCategoryCycling MaxMetCategory = 1
	MaxMetCategoryInvalid MaxMetCategory = 0xFF // INVALID
)

var maxmetcategorytostrs = map[MaxMetCategory]string{
	MaxMetCategoryGeneric: "generic",
	MaxMetCategoryCycling: "cycling",
	MaxMetCategoryInvalid: "invalid",
}

func (m MaxMetCategory) String() string {
	val, ok := maxmetcategorytostrs[m]
	if !ok {
		return strconv.Itoa(int(m))
	}
	return val
}

var strtomaxmetcategory = func() map[string]MaxMetCategory {
	m := make(map[string]MaxMetCategory)
	for t, str := range maxmetcategorytostrs {
		m[str] = MaxMetCategory(t)
	}
	return m
}()

// FromString parse string into MaxMetCategory constant it's represent, return MaxMetCategoryInvalid if not found.
func MaxMetCategoryFromString(s string) MaxMetCategory {
	val, ok := strtomaxmetcategory[s]
	if !ok {
		return strtomaxmetcategory["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListMaxMetCategory() []MaxMetCategory {
	vs := make([]MaxMetCategory, 0, len(maxmetcategorytostrs))
	for i := range maxmetcategorytostrs {
		vs = append(vs, MaxMetCategory(i))
	}
	return vs
}
