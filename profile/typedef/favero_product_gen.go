// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type FaveroProduct uint16

const (
	FaveroProductAssiomaUno FaveroProduct = 10
	FaveroProductAssiomaDuo FaveroProduct = 12
	FaveroProductInvalid    FaveroProduct = 0xFFFF
)

func (f FaveroProduct) Uint16() uint16 { return uint16(f) }

func (f FaveroProduct) String() string {
	switch f {
	case FaveroProductAssiomaUno:
		return "assioma_uno"
	case FaveroProductAssiomaDuo:
		return "assioma_duo"
	default:
		return "FaveroProductInvalid(" + strconv.FormatUint(uint64(f), 10) + ")"
	}
}

// FromString parse string into FaveroProduct constant it's represent, return FaveroProductInvalid if not found.
func FaveroProductFromString(s string) FaveroProduct {
	switch s {
	case "assioma_uno":
		return FaveroProductAssiomaUno
	case "assioma_duo":
		return FaveroProductAssiomaDuo
	default:
		return FaveroProductInvalid
	}
}

// List returns all constants.
func ListFaveroProduct() []FaveroProduct {
	return []FaveroProduct{
		FaveroProductAssiomaUno,
		FaveroProductAssiomaDuo,
	}
}
