// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type BacklightTimeout uint8

const (
	BacklightTimeoutInfinite BacklightTimeout = 0 // Backlight stays on forever.
	BacklightTimeoutInvalid  BacklightTimeout = 0xFF
)

func (b BacklightTimeout) Uint8() uint8 { return uint8(b) }

func (b BacklightTimeout) String() string {
	switch b {
	case BacklightTimeoutInfinite:
		return "infinite"
	default:
		return "BacklightTimeoutInvalid(" + strconv.FormatUint(uint64(b), 10) + ")"
	}
}

// FromString parse string into BacklightTimeout constant it's represent, return BacklightTimeoutInvalid if not found.
func BacklightTimeoutFromString(s string) BacklightTimeout {
	switch s {
	case "infinite":
		return BacklightTimeoutInfinite
	default:
		return BacklightTimeoutInvalid
	}
}

// List returns all constants.
func ListBacklightTimeout() []BacklightTimeout {
	return []BacklightTimeout{
		BacklightTimeoutInfinite,
	}
}
