// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type DateTime uint32

const (
	DateTimeMin     DateTime = 0x10000000 // if date_time is < 0x10000000 then it is system time (seconds from device power on)
	DateTimeInvalid DateTime = 0xFFFFFFFF
)

func (d DateTime) Uint32() uint32 { return uint32(d) }

func (d DateTime) String() string {
	switch d {
	case DateTimeMin:
		return "min"
	default:
		return "DateTimeInvalid(" + strconv.FormatUint(uint64(d), 10) + ")"
	}
}

// FromString parse string into DateTime constant it's represent, return DateTimeInvalid if not found.
func DateTimeFromString(s string) DateTime {
	switch s {
	case "min":
		return DateTimeMin
	default:
		return DateTimeInvalid
	}
}

// List returns all constants.
func ListDateTime() []DateTime {
	return []DateTime{
		DateTimeMin,
	}
}
