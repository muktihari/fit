// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type DiveAlarmType byte

const (
	DiveAlarmTypeDepth   DiveAlarmType = 0 // Alarm when a certain depth is crossed
	DiveAlarmTypeTime    DiveAlarmType = 1 // Alarm when a certain time has transpired
	DiveAlarmTypeSpeed   DiveAlarmType = 2 // Alarm when a certain ascent or descent rate is exceeded
	DiveAlarmTypeInvalid DiveAlarmType = 0xFF
)

func (d DiveAlarmType) String() string {
	switch d {
	case DiveAlarmTypeDepth:
		return "depth"
	case DiveAlarmTypeTime:
		return "time"
	case DiveAlarmTypeSpeed:
		return "speed"
	default:
		return "DiveAlarmTypeInvalid(" + strconv.Itoa(int(d)) + ")"
	}
}

// FromString parse string into DiveAlarmType constant it's represent, return DiveAlarmTypeInvalid if not found.
func DiveAlarmTypeFromString(s string) DiveAlarmType {
	switch s {
	case "depth":
		return DiveAlarmTypeDepth
	case "time":
		return DiveAlarmTypeTime
	case "speed":
		return DiveAlarmTypeSpeed
	default:
		return DiveAlarmTypeInvalid
	}
}

// List returns all constants.
func ListDiveAlarmType() []DiveAlarmType {
	return []DiveAlarmType{
		DiveAlarmTypeDepth,
		DiveAlarmTypeTime,
		DiveAlarmTypeSpeed,
	}
}
