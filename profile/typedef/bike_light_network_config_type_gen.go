// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type BikeLightNetworkConfigType byte

const (
	BikeLightNetworkConfigTypeAuto           BikeLightNetworkConfigType = 0
	BikeLightNetworkConfigTypeIndividual     BikeLightNetworkConfigType = 4
	BikeLightNetworkConfigTypeHighVisibility BikeLightNetworkConfigType = 5
	BikeLightNetworkConfigTypeTrail          BikeLightNetworkConfigType = 6
	BikeLightNetworkConfigTypeInvalid        BikeLightNetworkConfigType = 0xFF
)

func (b BikeLightNetworkConfigType) Byte() byte { return byte(b) }

func (b BikeLightNetworkConfigType) String() string {
	switch b {
	case BikeLightNetworkConfigTypeAuto:
		return "auto"
	case BikeLightNetworkConfigTypeIndividual:
		return "individual"
	case BikeLightNetworkConfigTypeHighVisibility:
		return "high_visibility"
	case BikeLightNetworkConfigTypeTrail:
		return "trail"
	default:
		return "BikeLightNetworkConfigTypeInvalid(" + strconv.Itoa(int(b)) + ")"
	}
}

// FromString parse string into BikeLightNetworkConfigType constant it's represent, return BikeLightNetworkConfigTypeInvalid if not found.
func BikeLightNetworkConfigTypeFromString(s string) BikeLightNetworkConfigType {
	switch s {
	case "auto":
		return BikeLightNetworkConfigTypeAuto
	case "individual":
		return BikeLightNetworkConfigTypeIndividual
	case "high_visibility":
		return BikeLightNetworkConfigTypeHighVisibility
	case "trail":
		return BikeLightNetworkConfigTypeTrail
	default:
		return BikeLightNetworkConfigTypeInvalid
	}
}

// List returns all constants.
func ListBikeLightNetworkConfigType() []BikeLightNetworkConfigType {
	return []BikeLightNetworkConfigType{
		BikeLightNetworkConfigTypeAuto,
		BikeLightNetworkConfigTypeIndividual,
		BikeLightNetworkConfigTypeHighVisibility,
		BikeLightNetworkConfigTypeTrail,
	}
}
