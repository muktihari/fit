// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type WaterType byte

const (
	WaterTypeFresh   WaterType = 0
	WaterTypeSalt    WaterType = 1
	WaterTypeEn13319 WaterType = 2
	WaterTypeCustom  WaterType = 3
	WaterTypeInvalid WaterType = 0xFF
)

func (w WaterType) String() string {
	switch w {
	case WaterTypeFresh:
		return "fresh"
	case WaterTypeSalt:
		return "salt"
	case WaterTypeEn13319:
		return "en13319"
	case WaterTypeCustom:
		return "custom"
	default:
		return "WaterTypeInvalid(" + strconv.Itoa(int(w)) + ")"
	}
}

// FromString parse string into WaterType constant it's represent, return WaterTypeInvalid if not found.
func WaterTypeFromString(s string) WaterType {
	switch s {
	case "fresh":
		return WaterTypeFresh
	case "salt":
		return WaterTypeSalt
	case "en13319":
		return WaterTypeEn13319
	case "custom":
		return WaterTypeCustom
	default:
		return WaterTypeInvalid
	}
}

// List returns all constants.
func ListWaterType() []WaterType {
	return []WaterType{
		WaterTypeFresh,
		WaterTypeSalt,
		WaterTypeEn13319,
		WaterTypeCustom,
	}
}
