// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type SledgeHammerExerciseName uint16

const (
	SledgeHammerExerciseNameLateralSwing SledgeHammerExerciseName = 0
	SledgeHammerExerciseNameHammerSlam   SledgeHammerExerciseName = 1
	SledgeHammerExerciseNameInvalid      SledgeHammerExerciseName = 0xFFFF
)

func (s SledgeHammerExerciseName) Uint16() uint16 { return uint16(s) }

func (s SledgeHammerExerciseName) String() string {
	switch s {
	case SledgeHammerExerciseNameLateralSwing:
		return "lateral_swing"
	case SledgeHammerExerciseNameHammerSlam:
		return "hammer_slam"
	default:
		return "SledgeHammerExerciseNameInvalid(" + strconv.FormatUint(uint64(s), 10) + ")"
	}
}

// FromString parse string into SledgeHammerExerciseName constant it's represent, return SledgeHammerExerciseNameInvalid if not found.
func SledgeHammerExerciseNameFromString(s string) SledgeHammerExerciseName {
	switch s {
	case "lateral_swing":
		return SledgeHammerExerciseNameLateralSwing
	case "hammer_slam":
		return SledgeHammerExerciseNameHammerSlam
	default:
		return SledgeHammerExerciseNameInvalid
	}
}

// List returns all constants.
func ListSledgeHammerExerciseName() []SledgeHammerExerciseName {
	return []SledgeHammerExerciseName{
		SledgeHammerExerciseNameLateralSwing,
		SledgeHammerExerciseNameHammerSlam,
	}
}
