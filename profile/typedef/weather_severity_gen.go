// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type WeatherSeverity byte

const (
	WeatherSeverityUnknown   WeatherSeverity = 0
	WeatherSeverityWarning   WeatherSeverity = 1
	WeatherSeverityWatch     WeatherSeverity = 2
	WeatherSeverityAdvisory  WeatherSeverity = 3
	WeatherSeverityStatement WeatherSeverity = 4
	WeatherSeverityInvalid   WeatherSeverity = 0xFF
)

func (w WeatherSeverity) String() string {
	switch w {
	case WeatherSeverityUnknown:
		return "unknown"
	case WeatherSeverityWarning:
		return "warning"
	case WeatherSeverityWatch:
		return "watch"
	case WeatherSeverityAdvisory:
		return "advisory"
	case WeatherSeverityStatement:
		return "statement"
	default:
		return "WeatherSeverityInvalid(" + strconv.Itoa(int(w)) + ")"
	}
}

// FromString parse string into WeatherSeverity constant it's represent, return WeatherSeverityInvalid if not found.
func WeatherSeverityFromString(s string) WeatherSeverity {
	switch s {
	case "unknown":
		return WeatherSeverityUnknown
	case "warning":
		return WeatherSeverityWarning
	case "watch":
		return WeatherSeverityWatch
	case "advisory":
		return WeatherSeverityAdvisory
	case "statement":
		return WeatherSeverityStatement
	default:
		return WeatherSeverityInvalid
	}
}

// List returns all constants.
func ListWeatherSeverity() []WeatherSeverity {
	return []WeatherSeverity{
		WeatherSeverityUnknown,
		WeatherSeverityWarning,
		WeatherSeverityWatch,
		WeatherSeverityAdvisory,
		WeatherSeverityStatement,
	}
}
