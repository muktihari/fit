// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type CarryExerciseName uint16

const (
	CarryExerciseNameBarHolds          CarryExerciseName = 0
	CarryExerciseNameFarmersWalk       CarryExerciseName = 1
	CarryExerciseNameFarmersWalkOnToes CarryExerciseName = 2
	CarryExerciseNameHexDumbbellHold   CarryExerciseName = 3
	CarryExerciseNameOverheadCarry     CarryExerciseName = 4
	CarryExerciseNameInvalid           CarryExerciseName = 0xFFFF // INVALID
)

var carryexercisenametostrs = map[CarryExerciseName]string{
	CarryExerciseNameBarHolds:          "bar_holds",
	CarryExerciseNameFarmersWalk:       "farmers_walk",
	CarryExerciseNameFarmersWalkOnToes: "farmers_walk_on_toes",
	CarryExerciseNameHexDumbbellHold:   "hex_dumbbell_hold",
	CarryExerciseNameOverheadCarry:     "overhead_carry",
	CarryExerciseNameInvalid:           "invalid",
}

func (c CarryExerciseName) String() string {
	val, ok := carryexercisenametostrs[c]
	if !ok {
		return strconv.FormatUint(uint64(c), 10)
	}
	return val
}

var strtocarryexercisename = func() map[string]CarryExerciseName {
	m := make(map[string]CarryExerciseName)
	for t, str := range carryexercisenametostrs {
		m[str] = CarryExerciseName(t)
	}
	return m
}()

// FromString parse string into CarryExerciseName constant it's represent, return CarryExerciseNameInvalid if not found.
func CarryExerciseNameFromString(s string) CarryExerciseName {
	val, ok := strtocarryexercisename[s]
	if !ok {
		return strtocarryexercisename["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListCarryExerciseName() []CarryExerciseName {
	vs := make([]CarryExerciseName, 0, len(carryexercisenametostrs))
	for i := range carryexercisenametostrs {
		vs = append(vs, CarryExerciseName(i))
	}
	return vs
}
