// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type ShrugExerciseName uint16

const (
	ShrugExerciseNameBarbellJumpShrug               ShrugExerciseName = 0
	ShrugExerciseNameBarbellShrug                   ShrugExerciseName = 1
	ShrugExerciseNameBarbellUprightRow              ShrugExerciseName = 2
	ShrugExerciseNameBehindTheBackSmithMachineShrug ShrugExerciseName = 3
	ShrugExerciseNameDumbbellJumpShrug              ShrugExerciseName = 4
	ShrugExerciseNameDumbbellShrug                  ShrugExerciseName = 5
	ShrugExerciseNameDumbbellUprightRow             ShrugExerciseName = 6
	ShrugExerciseNameInclineDumbbellShrug           ShrugExerciseName = 7
	ShrugExerciseNameOverheadBarbellShrug           ShrugExerciseName = 8
	ShrugExerciseNameOverheadDumbbellShrug          ShrugExerciseName = 9
	ShrugExerciseNameScaptionAndShrug               ShrugExerciseName = 10
	ShrugExerciseNameScapularRetraction             ShrugExerciseName = 11
	ShrugExerciseNameSerratusChairShrug             ShrugExerciseName = 12
	ShrugExerciseNameWeightedSerratusChairShrug     ShrugExerciseName = 13
	ShrugExerciseNameSerratusShrug                  ShrugExerciseName = 14
	ShrugExerciseNameWeightedSerratusShrug          ShrugExerciseName = 15
	ShrugExerciseNameWideGripJumpShrug              ShrugExerciseName = 16
	ShrugExerciseNameInvalid                        ShrugExerciseName = 0xFFFF // INVALID
)

var shrugexercisenametostrs = map[ShrugExerciseName]string{
	ShrugExerciseNameBarbellJumpShrug:               "barbell_jump_shrug",
	ShrugExerciseNameBarbellShrug:                   "barbell_shrug",
	ShrugExerciseNameBarbellUprightRow:              "barbell_upright_row",
	ShrugExerciseNameBehindTheBackSmithMachineShrug: "behind_the_back_smith_machine_shrug",
	ShrugExerciseNameDumbbellJumpShrug:              "dumbbell_jump_shrug",
	ShrugExerciseNameDumbbellShrug:                  "dumbbell_shrug",
	ShrugExerciseNameDumbbellUprightRow:             "dumbbell_upright_row",
	ShrugExerciseNameInclineDumbbellShrug:           "incline_dumbbell_shrug",
	ShrugExerciseNameOverheadBarbellShrug:           "overhead_barbell_shrug",
	ShrugExerciseNameOverheadDumbbellShrug:          "overhead_dumbbell_shrug",
	ShrugExerciseNameScaptionAndShrug:               "scaption_and_shrug",
	ShrugExerciseNameScapularRetraction:             "scapular_retraction",
	ShrugExerciseNameSerratusChairShrug:             "serratus_chair_shrug",
	ShrugExerciseNameWeightedSerratusChairShrug:     "weighted_serratus_chair_shrug",
	ShrugExerciseNameSerratusShrug:                  "serratus_shrug",
	ShrugExerciseNameWeightedSerratusShrug:          "weighted_serratus_shrug",
	ShrugExerciseNameWideGripJumpShrug:              "wide_grip_jump_shrug",
	ShrugExerciseNameInvalid:                        "invalid",
}

func (s ShrugExerciseName) String() string {
	val, ok := shrugexercisenametostrs[s]
	if !ok {
		return strconv.FormatUint(uint64(s), 10)
	}
	return val
}

var strtoshrugexercisename = func() map[string]ShrugExerciseName {
	m := make(map[string]ShrugExerciseName)
	for t, str := range shrugexercisenametostrs {
		m[str] = ShrugExerciseName(t)
	}
	return m
}()

// FromString parse string into ShrugExerciseName constant it's represent, return ShrugExerciseNameInvalid if not found.
func ShrugExerciseNameFromString(s string) ShrugExerciseName {
	val, ok := strtoshrugexercisename[s]
	if !ok {
		return strtoshrugexercisename["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListShrugExerciseName() []ShrugExerciseName {
	vs := make([]ShrugExerciseName, 0, len(shrugexercisenametostrs))
	for i := range shrugexercisenametostrs {
		vs = append(vs, ShrugExerciseName(i))
	}
	return vs
}
