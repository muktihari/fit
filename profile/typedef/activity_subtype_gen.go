// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type ActivitySubtype byte

const (
	ActivitySubtypeGeneric       ActivitySubtype = 0
	ActivitySubtypeTreadmill     ActivitySubtype = 1  // Run
	ActivitySubtypeStreet        ActivitySubtype = 2  // Run
	ActivitySubtypeTrail         ActivitySubtype = 3  // Run
	ActivitySubtypeTrack         ActivitySubtype = 4  // Run
	ActivitySubtypeSpin          ActivitySubtype = 5  // Cycling
	ActivitySubtypeIndoorCycling ActivitySubtype = 6  // Cycling
	ActivitySubtypeRoad          ActivitySubtype = 7  // Cycling
	ActivitySubtypeMountain      ActivitySubtype = 8  // Cycling
	ActivitySubtypeDownhill      ActivitySubtype = 9  // Cycling
	ActivitySubtypeRecumbent     ActivitySubtype = 10 // Cycling
	ActivitySubtypeCyclocross    ActivitySubtype = 11 // Cycling
	ActivitySubtypeHandCycling   ActivitySubtype = 12 // Cycling
	ActivitySubtypeTrackCycling  ActivitySubtype = 13 // Cycling
	ActivitySubtypeIndoorRowing  ActivitySubtype = 14 // Fitness Equipment
	ActivitySubtypeElliptical    ActivitySubtype = 15 // Fitness Equipment
	ActivitySubtypeStairClimbing ActivitySubtype = 16 // Fitness Equipment
	ActivitySubtypeLapSwimming   ActivitySubtype = 17 // Swimming
	ActivitySubtypeOpenWater     ActivitySubtype = 18 // Swimming
	ActivitySubtypeAll           ActivitySubtype = 254
	ActivitySubtypeInvalid       ActivitySubtype = 0xFF // INVALID
)

var activitysubtypetostrs = map[ActivitySubtype]string{
	ActivitySubtypeGeneric:       "generic",
	ActivitySubtypeTreadmill:     "treadmill",
	ActivitySubtypeStreet:        "street",
	ActivitySubtypeTrail:         "trail",
	ActivitySubtypeTrack:         "track",
	ActivitySubtypeSpin:          "spin",
	ActivitySubtypeIndoorCycling: "indoor_cycling",
	ActivitySubtypeRoad:          "road",
	ActivitySubtypeMountain:      "mountain",
	ActivitySubtypeDownhill:      "downhill",
	ActivitySubtypeRecumbent:     "recumbent",
	ActivitySubtypeCyclocross:    "cyclocross",
	ActivitySubtypeHandCycling:   "hand_cycling",
	ActivitySubtypeTrackCycling:  "track_cycling",
	ActivitySubtypeIndoorRowing:  "indoor_rowing",
	ActivitySubtypeElliptical:    "elliptical",
	ActivitySubtypeStairClimbing: "stair_climbing",
	ActivitySubtypeLapSwimming:   "lap_swimming",
	ActivitySubtypeOpenWater:     "open_water",
	ActivitySubtypeAll:           "all",
	ActivitySubtypeInvalid:       "invalid",
}

func (a ActivitySubtype) String() string {
	val, ok := activitysubtypetostrs[a]
	if !ok {
		return strconv.Itoa(int(a))
	}
	return val
}

var strtoactivitysubtype = func() map[string]ActivitySubtype {
	m := make(map[string]ActivitySubtype)
	for t, str := range activitysubtypetostrs {
		m[str] = ActivitySubtype(t)
	}
	return m
}()

// FromString parse string into ActivitySubtype constant it's represent, return ActivitySubtypeInvalid if not found.
func ActivitySubtypeFromString(s string) ActivitySubtype {
	val, ok := strtoactivitysubtype[s]
	if !ok {
		return strtoactivitysubtype["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListActivitySubtype() []ActivitySubtype {
	vs := make([]ActivitySubtype, 0, len(activitysubtypetostrs))
	for i := range activitysubtypetostrs {
		vs = append(vs, ActivitySubtype(i))
	}
	return vs
}
