// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type LeftRightBalance uint8

const (
	LeftRightBalanceMask    LeftRightBalance = 0x7F // % contribution
	LeftRightBalanceRight   LeftRightBalance = 0x80 // data corresponds to right if set, otherwise unknown
	LeftRightBalanceInvalid LeftRightBalance = 0xFF
)

func (l LeftRightBalance) String() string {
	switch l {
	case LeftRightBalanceMask:
		return "mask"
	case LeftRightBalanceRight:
		return "right"
	default:
		return "LeftRightBalanceInvalid(" + strconv.FormatUint(uint64(l), 10) + ")"
	}
}

// FromString parse string into LeftRightBalance constant it's represent, return LeftRightBalanceInvalid if not found.
func LeftRightBalanceFromString(s string) LeftRightBalance {
	switch s {
	case "mask":
		return LeftRightBalanceMask
	case "right":
		return LeftRightBalanceRight
	default:
		return LeftRightBalanceInvalid
	}
}

// List returns all constants.
func ListLeftRightBalance() []LeftRightBalance {
	return []LeftRightBalance{
		LeftRightBalanceMask,
		LeftRightBalanceRight,
	}
}
