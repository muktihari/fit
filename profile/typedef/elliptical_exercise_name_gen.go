// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type EllipticalExerciseName uint16

const (
	EllipticalExerciseNameElliptical EllipticalExerciseName = 0
	EllipticalExerciseNameInvalid    EllipticalExerciseName = 0xFFFF
)

func (e EllipticalExerciseName) Uint16() uint16 { return uint16(e) }

func (e EllipticalExerciseName) String() string {
	switch e {
	case EllipticalExerciseNameElliptical:
		return "elliptical"
	default:
		return "EllipticalExerciseNameInvalid(" + strconv.FormatUint(uint64(e), 10) + ")"
	}
}

// FromString parse string into EllipticalExerciseName constant it's represent, return EllipticalExerciseNameInvalid if not found.
func EllipticalExerciseNameFromString(s string) EllipticalExerciseName {
	switch s {
	case "elliptical":
		return EllipticalExerciseNameElliptical
	default:
		return EllipticalExerciseNameInvalid
	}
}

// List returns all constants.
func ListEllipticalExerciseName() []EllipticalExerciseName {
	return []EllipticalExerciseName{
		EllipticalExerciseNameElliptical,
	}
}
