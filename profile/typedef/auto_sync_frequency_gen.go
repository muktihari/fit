// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type AutoSyncFrequency byte

const (
	AutoSyncFrequencyNever        AutoSyncFrequency = 0
	AutoSyncFrequencyOccasionally AutoSyncFrequency = 1
	AutoSyncFrequencyFrequent     AutoSyncFrequency = 2
	AutoSyncFrequencyOnceADay     AutoSyncFrequency = 3
	AutoSyncFrequencyRemote       AutoSyncFrequency = 4
	AutoSyncFrequencyInvalid      AutoSyncFrequency = 0xFF // INVALID
)

var autosyncfrequencytostrs = map[AutoSyncFrequency]string{
	AutoSyncFrequencyNever:        "never",
	AutoSyncFrequencyOccasionally: "occasionally",
	AutoSyncFrequencyFrequent:     "frequent",
	AutoSyncFrequencyOnceADay:     "once_a_day",
	AutoSyncFrequencyRemote:       "remote",
	AutoSyncFrequencyInvalid:      "invalid",
}

func (a AutoSyncFrequency) String() string {
	val, ok := autosyncfrequencytostrs[a]
	if !ok {
		return strconv.Itoa(int(a))
	}
	return val
}

var strtoautosyncfrequency = func() map[string]AutoSyncFrequency {
	m := make(map[string]AutoSyncFrequency)
	for t, str := range autosyncfrequencytostrs {
		m[str] = AutoSyncFrequency(t)
	}
	return m
}()

// FromString parse string into AutoSyncFrequency constant it's represent, return AutoSyncFrequencyInvalid if not found.
func AutoSyncFrequencyFromString(s string) AutoSyncFrequency {
	val, ok := strtoautosyncfrequency[s]
	if !ok {
		return strtoautosyncfrequency["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListAutoSyncFrequency() []AutoSyncFrequency {
	vs := make([]AutoSyncFrequency, 0, len(autosyncfrequencytostrs))
	for i := range autosyncfrequencytostrs {
		vs = append(vs, AutoSyncFrequency(i))
	}
	return vs
}
