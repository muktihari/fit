// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type SwimStroke byte

const (
	SwimStrokeFreestyle    SwimStroke = 0
	SwimStrokeBackstroke   SwimStroke = 1
	SwimStrokeBreaststroke SwimStroke = 2
	SwimStrokeButterfly    SwimStroke = 3
	SwimStrokeDrill        SwimStroke = 4
	SwimStrokeMixed        SwimStroke = 5
	SwimStrokeIm           SwimStroke = 6 // IM is a mixed interval containing the same number of lengths for each of: Butterfly, Backstroke, Breaststroke, Freestyle, swam in that order.
	SwimStrokeInvalid      SwimStroke = 0xFF
)

func (s SwimStroke) String() string {
	switch s {
	case SwimStrokeFreestyle:
		return "freestyle"
	case SwimStrokeBackstroke:
		return "backstroke"
	case SwimStrokeBreaststroke:
		return "breaststroke"
	case SwimStrokeButterfly:
		return "butterfly"
	case SwimStrokeDrill:
		return "drill"
	case SwimStrokeMixed:
		return "mixed"
	case SwimStrokeIm:
		return "im"
	default:
		return "SwimStrokeInvalid(" + strconv.Itoa(int(s)) + ")"
	}
}

// FromString parse string into SwimStroke constant it's represent, return SwimStrokeInvalid if not found.
func SwimStrokeFromString(s string) SwimStroke {
	switch s {
	case "freestyle":
		return SwimStrokeFreestyle
	case "backstroke":
		return SwimStrokeBackstroke
	case "breaststroke":
		return SwimStrokeBreaststroke
	case "butterfly":
		return SwimStrokeButterfly
	case "drill":
		return SwimStrokeDrill
	case "mixed":
		return SwimStrokeMixed
	case "im":
		return SwimStrokeIm
	default:
		return SwimStrokeInvalid
	}
}

// List returns all constants.
func ListSwimStroke() []SwimStroke {
	return []SwimStroke{
		SwimStrokeFreestyle,
		SwimStrokeBackstroke,
		SwimStrokeBreaststroke,
		SwimStrokeButterfly,
		SwimStrokeDrill,
		SwimStrokeMixed,
		SwimStrokeIm,
	}
}
