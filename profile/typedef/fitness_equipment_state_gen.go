// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type FitnessEquipmentState byte

const (
	FitnessEquipmentStateReady   FitnessEquipmentState = 0
	FitnessEquipmentStateInUse   FitnessEquipmentState = 1
	FitnessEquipmentStatePaused  FitnessEquipmentState = 2
	FitnessEquipmentStateUnknown FitnessEquipmentState = 3 // lost connection to fitness equipment
	FitnessEquipmentStateInvalid FitnessEquipmentState = 0xFF
)

func (f FitnessEquipmentState) String() string {
	switch f {
	case FitnessEquipmentStateReady:
		return "ready"
	case FitnessEquipmentStateInUse:
		return "in_use"
	case FitnessEquipmentStatePaused:
		return "paused"
	case FitnessEquipmentStateUnknown:
		return "unknown"
	default:
		return "FitnessEquipmentStateInvalid(" + strconv.Itoa(int(f)) + ")"
	}
}

// FromString parse string into FitnessEquipmentState constant it's represent, return FitnessEquipmentStateInvalid if not found.
func FitnessEquipmentStateFromString(s string) FitnessEquipmentState {
	switch s {
	case "ready":
		return FitnessEquipmentStateReady
	case "in_use":
		return FitnessEquipmentStateInUse
	case "paused":
		return FitnessEquipmentStatePaused
	case "unknown":
		return FitnessEquipmentStateUnknown
	default:
		return FitnessEquipmentStateInvalid
	}
}

// List returns all constants.
func ListFitnessEquipmentState() []FitnessEquipmentState {
	return []FitnessEquipmentState{
		FitnessEquipmentStateReady,
		FitnessEquipmentStateInUse,
		FitnessEquipmentStatePaused,
		FitnessEquipmentStateUnknown,
	}
}
