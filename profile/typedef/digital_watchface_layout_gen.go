// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type DigitalWatchfaceLayout byte

const (
	DigitalWatchfaceLayoutTraditional DigitalWatchfaceLayout = 0
	DigitalWatchfaceLayoutModern      DigitalWatchfaceLayout = 1
	DigitalWatchfaceLayoutBold        DigitalWatchfaceLayout = 2
	DigitalWatchfaceLayoutInvalid     DigitalWatchfaceLayout = 0xFF // INVALID
)

var digitalwatchfacelayouttostrs = map[DigitalWatchfaceLayout]string{
	DigitalWatchfaceLayoutTraditional: "traditional",
	DigitalWatchfaceLayoutModern:      "modern",
	DigitalWatchfaceLayoutBold:        "bold",
	DigitalWatchfaceLayoutInvalid:     "invalid",
}

func (d DigitalWatchfaceLayout) String() string {
	val, ok := digitalwatchfacelayouttostrs[d]
	if !ok {
		return strconv.Itoa(int(d))
	}
	return val
}

var strtodigitalwatchfacelayout = func() map[string]DigitalWatchfaceLayout {
	m := make(map[string]DigitalWatchfaceLayout)
	for t, str := range digitalwatchfacelayouttostrs {
		m[str] = DigitalWatchfaceLayout(t)
	}
	return m
}()

// FromString parse string into DigitalWatchfaceLayout constant it's represent, return DigitalWatchfaceLayoutInvalid if not found.
func DigitalWatchfaceLayoutFromString(s string) DigitalWatchfaceLayout {
	val, ok := strtodigitalwatchfacelayout[s]
	if !ok {
		return strtodigitalwatchfacelayout["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListDigitalWatchfaceLayout() []DigitalWatchfaceLayout {
	vs := make([]DigitalWatchfaceLayout, 0, len(digitalwatchfacelayouttostrs))
	for i := range digitalwatchfacelayouttostrs {
		vs = append(vs, DigitalWatchfaceLayout(i))
	}
	return vs
}
