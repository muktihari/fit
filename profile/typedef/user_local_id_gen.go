// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type UserLocalId uint16

const (
	UserLocalIdLocalMin      UserLocalId = 0x0000
	UserLocalIdLocalMax      UserLocalId = 0x000F
	UserLocalIdStationaryMin UserLocalId = 0x0010
	UserLocalIdStationaryMax UserLocalId = 0x00FF
	UserLocalIdPortableMin   UserLocalId = 0x0100
	UserLocalIdPortableMax   UserLocalId = 0xFFFE
	UserLocalIdInvalid       UserLocalId = 0xFFFF
)

func (u UserLocalId) Uint16() uint16 { return uint16(u) }

func (u UserLocalId) String() string {
	switch u {
	case UserLocalIdLocalMin:
		return "local_min"
	case UserLocalIdLocalMax:
		return "local_max"
	case UserLocalIdStationaryMin:
		return "stationary_min"
	case UserLocalIdStationaryMax:
		return "stationary_max"
	case UserLocalIdPortableMin:
		return "portable_min"
	case UserLocalIdPortableMax:
		return "portable_max"
	default:
		return "UserLocalIdInvalid(" + strconv.FormatUint(uint64(u), 10) + ")"
	}
}

// FromString parse string into UserLocalId constant it's represent, return UserLocalIdInvalid if not found.
func UserLocalIdFromString(s string) UserLocalId {
	switch s {
	case "local_min":
		return UserLocalIdLocalMin
	case "local_max":
		return UserLocalIdLocalMax
	case "stationary_min":
		return UserLocalIdStationaryMin
	case "stationary_max":
		return UserLocalIdStationaryMax
	case "portable_min":
		return UserLocalIdPortableMin
	case "portable_max":
		return UserLocalIdPortableMax
	default:
		return UserLocalIdInvalid
	}
}

// List returns all constants.
func ListUserLocalId() []UserLocalId {
	return []UserLocalId{
		UserLocalIdLocalMin,
		UserLocalIdLocalMax,
		UserLocalIdStationaryMin,
		UserLocalIdStationaryMax,
		UserLocalIdPortableMin,
		UserLocalIdPortableMax,
	}
}
