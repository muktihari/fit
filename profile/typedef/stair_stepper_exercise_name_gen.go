// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type StairStepperExerciseName uint16

const (
	StairStepperExerciseNameStairStepper StairStepperExerciseName = 0
	StairStepperExerciseNameInvalid      StairStepperExerciseName = 0xFFFF
)

func (s StairStepperExerciseName) Uint16() uint16 { return uint16(s) }

func (s StairStepperExerciseName) String() string {
	switch s {
	case StairStepperExerciseNameStairStepper:
		return "stair_stepper"
	default:
		return "StairStepperExerciseNameInvalid(" + strconv.FormatUint(uint64(s), 10) + ")"
	}
}

// FromString parse string into StairStepperExerciseName constant it's represent, return StairStepperExerciseNameInvalid if not found.
func StairStepperExerciseNameFromString(s string) StairStepperExerciseName {
	switch s {
	case "stair_stepper":
		return StairStepperExerciseNameStairStepper
	default:
		return StairStepperExerciseNameInvalid
	}
}

// List returns all constants.
func ListStairStepperExerciseName() []StairStepperExerciseName {
	return []StairStepperExerciseName{
		StairStepperExerciseNameStairStepper,
	}
}
