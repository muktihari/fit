// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type MessageIndex uint16

const (
	MessageIndexSelected MessageIndex = 0x8000 // message is selected if set
	MessageIndexReserved MessageIndex = 0x7000 // reserved (default 0)
	MessageIndexMask     MessageIndex = 0x0FFF // index
	MessageIndexInvalid  MessageIndex = 0xFFFF
)

func (m MessageIndex) String() string {
	switch m {
	case MessageIndexSelected:
		return "selected"
	case MessageIndexReserved:
		return "reserved"
	case MessageIndexMask:
		return "mask"
	default:
		return "MessageIndexInvalid(" + strconv.FormatUint(uint64(m), 10) + ")"
	}
}

// FromString parse string into MessageIndex constant it's represent, return MessageIndexInvalid if not found.
func MessageIndexFromString(s string) MessageIndex {
	switch s {
	case "selected":
		return MessageIndexSelected
	case "reserved":
		return MessageIndexReserved
	case "mask":
		return MessageIndexMask
	default:
		return MessageIndexInvalid
	}
}

// List returns all constants.
func ListMessageIndex() []MessageIndex {
	return []MessageIndex{
		MessageIndexSelected,
		MessageIndexReserved,
		MessageIndexMask,
	}
}
