// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type NoFlyTimeMode byte

const (
	NoFlyTimeModeStandard    NoFlyTimeMode = 0 // Standard Diver Alert Network no-fly guidance
	NoFlyTimeModeFlat24Hours NoFlyTimeMode = 1 // Flat 24 hour no-fly guidance
	NoFlyTimeModeInvalid     NoFlyTimeMode = 0xFF
)

func (n NoFlyTimeMode) String() string {
	switch n {
	case NoFlyTimeModeStandard:
		return "standard"
	case NoFlyTimeModeFlat24Hours:
		return "flat_24_hours"
	default:
		return "NoFlyTimeModeInvalid(" + strconv.Itoa(int(n)) + ")"
	}
}

// FromString parse string into NoFlyTimeMode constant it's represent, return NoFlyTimeModeInvalid if not found.
func NoFlyTimeModeFromString(s string) NoFlyTimeMode {
	switch s {
	case "standard":
		return NoFlyTimeModeStandard
	case "flat_24_hours":
		return NoFlyTimeModeFlat24Hours
	default:
		return NoFlyTimeModeInvalid
	}
}

// List returns all constants.
func ListNoFlyTimeMode() []NoFlyTimeMode {
	return []NoFlyTimeMode{
		NoFlyTimeModeStandard,
		NoFlyTimeModeFlat24Hours,
	}
}
