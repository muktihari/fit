// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.133

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type WktStepTarget byte

const (
	WktStepTargetSpeed        WktStepTarget = 0
	WktStepTargetHeartRate    WktStepTarget = 1
	WktStepTargetOpen         WktStepTarget = 2
	WktStepTargetCadence      WktStepTarget = 3
	WktStepTargetPower        WktStepTarget = 4
	WktStepTargetGrade        WktStepTarget = 5
	WktStepTargetResistance   WktStepTarget = 6
	WktStepTargetPower3S      WktStepTarget = 7
	WktStepTargetPower10S     WktStepTarget = 8
	WktStepTargetPower30S     WktStepTarget = 9
	WktStepTargetPowerLap     WktStepTarget = 10
	WktStepTargetSwimStroke   WktStepTarget = 11
	WktStepTargetSpeedLap     WktStepTarget = 12
	WktStepTargetHeartRateLap WktStepTarget = 13
	WktStepTargetInvalid      WktStepTarget = 0xFF
)

func (w WktStepTarget) String() string {
	switch w {
	case WktStepTargetSpeed:
		return "speed"
	case WktStepTargetHeartRate:
		return "heart_rate"
	case WktStepTargetOpen:
		return "open"
	case WktStepTargetCadence:
		return "cadence"
	case WktStepTargetPower:
		return "power"
	case WktStepTargetGrade:
		return "grade"
	case WktStepTargetResistance:
		return "resistance"
	case WktStepTargetPower3S:
		return "power_3s"
	case WktStepTargetPower10S:
		return "power_10s"
	case WktStepTargetPower30S:
		return "power_30s"
	case WktStepTargetPowerLap:
		return "power_lap"
	case WktStepTargetSwimStroke:
		return "swim_stroke"
	case WktStepTargetSpeedLap:
		return "speed_lap"
	case WktStepTargetHeartRateLap:
		return "heart_rate_lap"
	default:
		return "WktStepTargetInvalid(" + strconv.Itoa(int(w)) + ")"
	}
}

// FromString parse string into WktStepTarget constant it's represent, return WktStepTargetInvalid if not found.
func WktStepTargetFromString(s string) WktStepTarget {
	switch s {
	case "speed":
		return WktStepTargetSpeed
	case "heart_rate":
		return WktStepTargetHeartRate
	case "open":
		return WktStepTargetOpen
	case "cadence":
		return WktStepTargetCadence
	case "power":
		return WktStepTargetPower
	case "grade":
		return WktStepTargetGrade
	case "resistance":
		return WktStepTargetResistance
	case "power_3s":
		return WktStepTargetPower3S
	case "power_10s":
		return WktStepTargetPower10S
	case "power_30s":
		return WktStepTargetPower30S
	case "power_lap":
		return WktStepTargetPowerLap
	case "swim_stroke":
		return WktStepTargetSwimStroke
	case "speed_lap":
		return WktStepTargetSpeedLap
	case "heart_rate_lap":
		return WktStepTargetHeartRateLap
	default:
		return WktStepTargetInvalid
	}
}

// List returns all constants.
func ListWktStepTarget() []WktStepTarget {
	return []WktStepTarget{
		WktStepTargetSpeed,
		WktStepTargetHeartRate,
		WktStepTargetOpen,
		WktStepTargetCadence,
		WktStepTargetPower,
		WktStepTargetGrade,
		WktStepTargetResistance,
		WktStepTargetPower3S,
		WktStepTargetPower10S,
		WktStepTargetPower30S,
		WktStepTargetPowerLap,
		WktStepTargetSwimStroke,
		WktStepTargetSpeedLap,
		WktStepTargetHeartRateLap,
	}
}
