// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type BikeLightBeamAngleMode uint8

const (
	BikeLightBeamAngleModeManual  BikeLightBeamAngleMode = 0
	BikeLightBeamAngleModeAuto    BikeLightBeamAngleMode = 1
	BikeLightBeamAngleModeInvalid BikeLightBeamAngleMode = 0xFF
)

func (b BikeLightBeamAngleMode) Uint8() uint8 { return uint8(b) }

func (b BikeLightBeamAngleMode) String() string {
	switch b {
	case BikeLightBeamAngleModeManual:
		return "manual"
	case BikeLightBeamAngleModeAuto:
		return "auto"
	default:
		return "BikeLightBeamAngleModeInvalid(" + strconv.FormatUint(uint64(b), 10) + ")"
	}
}

// FromString parse string into BikeLightBeamAngleMode constant it's represent, return BikeLightBeamAngleModeInvalid if not found.
func BikeLightBeamAngleModeFromString(s string) BikeLightBeamAngleMode {
	switch s {
	case "manual":
		return BikeLightBeamAngleModeManual
	case "auto":
		return BikeLightBeamAngleModeAuto
	default:
		return BikeLightBeamAngleModeInvalid
	}
}

// List returns all constants.
func ListBikeLightBeamAngleMode() []BikeLightBeamAngleMode {
	return []BikeLightBeamAngleMode{
		BikeLightBeamAngleModeManual,
		BikeLightBeamAngleModeAuto,
	}
}
