// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type BikeExerciseName uint16

const (
	BikeExerciseNameBike    BikeExerciseName = 0
	BikeExerciseNameRide    BikeExerciseName = 1
	BikeExerciseNameSprint  BikeExerciseName = 2
	BikeExerciseNameInvalid BikeExerciseName = 0xFFFF
)

func (b BikeExerciseName) Uint16() uint16 { return uint16(b) }

func (b BikeExerciseName) String() string {
	switch b {
	case BikeExerciseNameBike:
		return "bike"
	case BikeExerciseNameRide:
		return "ride"
	case BikeExerciseNameSprint:
		return "sprint"
	default:
		return "BikeExerciseNameInvalid(" + strconv.FormatUint(uint64(b), 10) + ")"
	}
}

// FromString parse string into BikeExerciseName constant it's represent, return BikeExerciseNameInvalid if not found.
func BikeExerciseNameFromString(s string) BikeExerciseName {
	switch s {
	case "bike":
		return BikeExerciseNameBike
	case "ride":
		return BikeExerciseNameRide
	case "sprint":
		return BikeExerciseNameSprint
	default:
		return BikeExerciseNameInvalid
	}
}

// List returns all constants.
func ListBikeExerciseName() []BikeExerciseName {
	return []BikeExerciseName{
		BikeExerciseNameBike,
		BikeExerciseNameRide,
		BikeExerciseNameSprint,
	}
}
