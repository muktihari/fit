// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type RunExerciseName uint16

const (
	RunExerciseNameRun     RunExerciseName = 0
	RunExerciseNameWalk    RunExerciseName = 1
	RunExerciseNameJog     RunExerciseName = 2
	RunExerciseNameSprint  RunExerciseName = 3
	RunExerciseNameInvalid RunExerciseName = 0xFFFF
)

func (r RunExerciseName) Uint16() uint16 { return uint16(r) }

func (r RunExerciseName) String() string {
	switch r {
	case RunExerciseNameRun:
		return "run"
	case RunExerciseNameWalk:
		return "walk"
	case RunExerciseNameJog:
		return "jog"
	case RunExerciseNameSprint:
		return "sprint"
	default:
		return "RunExerciseNameInvalid(" + strconv.FormatUint(uint64(r), 10) + ")"
	}
}

// FromString parse string into RunExerciseName constant it's represent, return RunExerciseNameInvalid if not found.
func RunExerciseNameFromString(s string) RunExerciseName {
	switch s {
	case "run":
		return RunExerciseNameRun
	case "walk":
		return RunExerciseNameWalk
	case "jog":
		return RunExerciseNameJog
	case "sprint":
		return RunExerciseNameSprint
	default:
		return RunExerciseNameInvalid
	}
}

// List returns all constants.
func ListRunExerciseName() []RunExerciseName {
	return []RunExerciseName{
		RunExerciseNameRun,
		RunExerciseNameWalk,
		RunExerciseNameJog,
		RunExerciseNameSprint,
	}
}
