// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The FIT SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type DiveAlert byte

const (
	DiveAlertNdlReached                DiveAlert = 0
	DiveAlertGasSwitchPrompted         DiveAlert = 1
	DiveAlertNearSurface               DiveAlert = 2
	DiveAlertApproachingNdl            DiveAlert = 3
	DiveAlertPo2Warn                   DiveAlert = 4
	DiveAlertPo2CritHigh               DiveAlert = 5
	DiveAlertPo2CritLow                DiveAlert = 6
	DiveAlertTimeAlert                 DiveAlert = 7
	DiveAlertDepthAlert                DiveAlert = 8
	DiveAlertDecoCeilingBroken         DiveAlert = 9
	DiveAlertDecoComplete              DiveAlert = 10
	DiveAlertSafetyStopBroken          DiveAlert = 11
	DiveAlertSafetyStopComplete        DiveAlert = 12
	DiveAlertCnsWarning                DiveAlert = 13
	DiveAlertCnsCritical               DiveAlert = 14
	DiveAlertOtuWarning                DiveAlert = 15
	DiveAlertOtuCritical               DiveAlert = 16
	DiveAlertAscentCritical            DiveAlert = 17
	DiveAlertAlertDismissedByKey       DiveAlert = 18
	DiveAlertAlertDismissedByTimeout   DiveAlert = 19
	DiveAlertBatteryLow                DiveAlert = 20
	DiveAlertBatteryCritical           DiveAlert = 21
	DiveAlertSafetyStopStarted         DiveAlert = 22
	DiveAlertApproachingFirstDecoStop  DiveAlert = 23
	DiveAlertSetpointSwitchAutoLow     DiveAlert = 24
	DiveAlertSetpointSwitchAutoHigh    DiveAlert = 25
	DiveAlertSetpointSwitchManualLow   DiveAlert = 26
	DiveAlertSetpointSwitchManualHigh  DiveAlert = 27
	DiveAlertAutoSetpointSwitchIgnored DiveAlert = 28
	DiveAlertSwitchedToOpenCircuit     DiveAlert = 29
	DiveAlertSwitchedToClosedCircuit   DiveAlert = 30
	DiveAlertTankBatteryLow            DiveAlert = 32
	DiveAlertPo2CcrDilLow              DiveAlert = 33 // ccr diluent has low po2
	DiveAlertDecoStopCleared           DiveAlert = 34 // a deco stop has been cleared
	DiveAlertApneaNeutralBuoyancy      DiveAlert = 35 // Target Depth Apnea Alarm triggered
	DiveAlertApneaTargetDepth          DiveAlert = 36 // Neutral Buoyance Apnea Alarm triggered
	DiveAlertApneaSurface              DiveAlert = 37 // Surface Apnea Alarm triggered
	DiveAlertApneaHighSpeed            DiveAlert = 38 // High Speed Apnea Alarm triggered
	DiveAlertApneaLowSpeed             DiveAlert = 39 // Low Speed Apnea Alarm triggered
	DiveAlertInvalid                   DiveAlert = 0xFF
)

func (d DiveAlert) Byte() byte { return byte(d) }

func (d DiveAlert) String() string {
	switch d {
	case DiveAlertNdlReached:
		return "ndl_reached"
	case DiveAlertGasSwitchPrompted:
		return "gas_switch_prompted"
	case DiveAlertNearSurface:
		return "near_surface"
	case DiveAlertApproachingNdl:
		return "approaching_ndl"
	case DiveAlertPo2Warn:
		return "po2_warn"
	case DiveAlertPo2CritHigh:
		return "po2_crit_high"
	case DiveAlertPo2CritLow:
		return "po2_crit_low"
	case DiveAlertTimeAlert:
		return "time_alert"
	case DiveAlertDepthAlert:
		return "depth_alert"
	case DiveAlertDecoCeilingBroken:
		return "deco_ceiling_broken"
	case DiveAlertDecoComplete:
		return "deco_complete"
	case DiveAlertSafetyStopBroken:
		return "safety_stop_broken"
	case DiveAlertSafetyStopComplete:
		return "safety_stop_complete"
	case DiveAlertCnsWarning:
		return "cns_warning"
	case DiveAlertCnsCritical:
		return "cns_critical"
	case DiveAlertOtuWarning:
		return "otu_warning"
	case DiveAlertOtuCritical:
		return "otu_critical"
	case DiveAlertAscentCritical:
		return "ascent_critical"
	case DiveAlertAlertDismissedByKey:
		return "alert_dismissed_by_key"
	case DiveAlertAlertDismissedByTimeout:
		return "alert_dismissed_by_timeout"
	case DiveAlertBatteryLow:
		return "battery_low"
	case DiveAlertBatteryCritical:
		return "battery_critical"
	case DiveAlertSafetyStopStarted:
		return "safety_stop_started"
	case DiveAlertApproachingFirstDecoStop:
		return "approaching_first_deco_stop"
	case DiveAlertSetpointSwitchAutoLow:
		return "setpoint_switch_auto_low"
	case DiveAlertSetpointSwitchAutoHigh:
		return "setpoint_switch_auto_high"
	case DiveAlertSetpointSwitchManualLow:
		return "setpoint_switch_manual_low"
	case DiveAlertSetpointSwitchManualHigh:
		return "setpoint_switch_manual_high"
	case DiveAlertAutoSetpointSwitchIgnored:
		return "auto_setpoint_switch_ignored"
	case DiveAlertSwitchedToOpenCircuit:
		return "switched_to_open_circuit"
	case DiveAlertSwitchedToClosedCircuit:
		return "switched_to_closed_circuit"
	case DiveAlertTankBatteryLow:
		return "tank_battery_low"
	case DiveAlertPo2CcrDilLow:
		return "po2_ccr_dil_low"
	case DiveAlertDecoStopCleared:
		return "deco_stop_cleared"
	case DiveAlertApneaNeutralBuoyancy:
		return "apnea_neutral_buoyancy"
	case DiveAlertApneaTargetDepth:
		return "apnea_target_depth"
	case DiveAlertApneaSurface:
		return "apnea_surface"
	case DiveAlertApneaHighSpeed:
		return "apnea_high_speed"
	case DiveAlertApneaLowSpeed:
		return "apnea_low_speed"
	default:
		return "DiveAlertInvalid(" + strconv.Itoa(int(d)) + ")"
	}
}

// FromString parse string into DiveAlert constant it's represent, return DiveAlertInvalid if not found.
func DiveAlertFromString(s string) DiveAlert {
	switch s {
	case "ndl_reached":
		return DiveAlertNdlReached
	case "gas_switch_prompted":
		return DiveAlertGasSwitchPrompted
	case "near_surface":
		return DiveAlertNearSurface
	case "approaching_ndl":
		return DiveAlertApproachingNdl
	case "po2_warn":
		return DiveAlertPo2Warn
	case "po2_crit_high":
		return DiveAlertPo2CritHigh
	case "po2_crit_low":
		return DiveAlertPo2CritLow
	case "time_alert":
		return DiveAlertTimeAlert
	case "depth_alert":
		return DiveAlertDepthAlert
	case "deco_ceiling_broken":
		return DiveAlertDecoCeilingBroken
	case "deco_complete":
		return DiveAlertDecoComplete
	case "safety_stop_broken":
		return DiveAlertSafetyStopBroken
	case "safety_stop_complete":
		return DiveAlertSafetyStopComplete
	case "cns_warning":
		return DiveAlertCnsWarning
	case "cns_critical":
		return DiveAlertCnsCritical
	case "otu_warning":
		return DiveAlertOtuWarning
	case "otu_critical":
		return DiveAlertOtuCritical
	case "ascent_critical":
		return DiveAlertAscentCritical
	case "alert_dismissed_by_key":
		return DiveAlertAlertDismissedByKey
	case "alert_dismissed_by_timeout":
		return DiveAlertAlertDismissedByTimeout
	case "battery_low":
		return DiveAlertBatteryLow
	case "battery_critical":
		return DiveAlertBatteryCritical
	case "safety_stop_started":
		return DiveAlertSafetyStopStarted
	case "approaching_first_deco_stop":
		return DiveAlertApproachingFirstDecoStop
	case "setpoint_switch_auto_low":
		return DiveAlertSetpointSwitchAutoLow
	case "setpoint_switch_auto_high":
		return DiveAlertSetpointSwitchAutoHigh
	case "setpoint_switch_manual_low":
		return DiveAlertSetpointSwitchManualLow
	case "setpoint_switch_manual_high":
		return DiveAlertSetpointSwitchManualHigh
	case "auto_setpoint_switch_ignored":
		return DiveAlertAutoSetpointSwitchIgnored
	case "switched_to_open_circuit":
		return DiveAlertSwitchedToOpenCircuit
	case "switched_to_closed_circuit":
		return DiveAlertSwitchedToClosedCircuit
	case "tank_battery_low":
		return DiveAlertTankBatteryLow
	case "po2_ccr_dil_low":
		return DiveAlertPo2CcrDilLow
	case "deco_stop_cleared":
		return DiveAlertDecoStopCleared
	case "apnea_neutral_buoyancy":
		return DiveAlertApneaNeutralBuoyancy
	case "apnea_target_depth":
		return DiveAlertApneaTargetDepth
	case "apnea_surface":
		return DiveAlertApneaSurface
	case "apnea_high_speed":
		return DiveAlertApneaHighSpeed
	case "apnea_low_speed":
		return DiveAlertApneaLowSpeed
	default:
		return DiveAlertInvalid
	}
}

// List returns all constants.
func ListDiveAlert() []DiveAlert {
	return []DiveAlert{
		DiveAlertNdlReached,
		DiveAlertGasSwitchPrompted,
		DiveAlertNearSurface,
		DiveAlertApproachingNdl,
		DiveAlertPo2Warn,
		DiveAlertPo2CritHigh,
		DiveAlertPo2CritLow,
		DiveAlertTimeAlert,
		DiveAlertDepthAlert,
		DiveAlertDecoCeilingBroken,
		DiveAlertDecoComplete,
		DiveAlertSafetyStopBroken,
		DiveAlertSafetyStopComplete,
		DiveAlertCnsWarning,
		DiveAlertCnsCritical,
		DiveAlertOtuWarning,
		DiveAlertOtuCritical,
		DiveAlertAscentCritical,
		DiveAlertAlertDismissedByKey,
		DiveAlertAlertDismissedByTimeout,
		DiveAlertBatteryLow,
		DiveAlertBatteryCritical,
		DiveAlertSafetyStopStarted,
		DiveAlertApproachingFirstDecoStop,
		DiveAlertSetpointSwitchAutoLow,
		DiveAlertSetpointSwitchAutoHigh,
		DiveAlertSetpointSwitchManualLow,
		DiveAlertSetpointSwitchManualHigh,
		DiveAlertAutoSetpointSwitchIgnored,
		DiveAlertSwitchedToOpenCircuit,
		DiveAlertSwitchedToClosedCircuit,
		DiveAlertTankBatteryLow,
		DiveAlertPo2CcrDilLow,
		DiveAlertDecoStopCleared,
		DiveAlertApneaNeutralBuoyancy,
		DiveAlertApneaTargetDepth,
		DiveAlertApneaSurface,
		DiveAlertApneaHighSpeed,
		DiveAlertApneaLowSpeed,
	}
}
