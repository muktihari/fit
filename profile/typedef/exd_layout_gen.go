// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type ExdLayout byte

const (
	ExdLayoutFullScreen                ExdLayout = 0
	ExdLayoutHalfVertical              ExdLayout = 1
	ExdLayoutHalfHorizontal            ExdLayout = 2
	ExdLayoutHalfVerticalRightSplit    ExdLayout = 3
	ExdLayoutHalfHorizontalBottomSplit ExdLayout = 4
	ExdLayoutFullQuarterSplit          ExdLayout = 5
	ExdLayoutHalfVerticalLeftSplit     ExdLayout = 6
	ExdLayoutHalfHorizontalTopSplit    ExdLayout = 7
	ExdLayoutDynamic                   ExdLayout = 8 // The EXD may display the configured concepts in any layout it sees fit.
	ExdLayoutInvalid                   ExdLayout = 0xFF
)

func (e ExdLayout) String() string {
	switch e {
	case ExdLayoutFullScreen:
		return "full_screen"
	case ExdLayoutHalfVertical:
		return "half_vertical"
	case ExdLayoutHalfHorizontal:
		return "half_horizontal"
	case ExdLayoutHalfVerticalRightSplit:
		return "half_vertical_right_split"
	case ExdLayoutHalfHorizontalBottomSplit:
		return "half_horizontal_bottom_split"
	case ExdLayoutFullQuarterSplit:
		return "full_quarter_split"
	case ExdLayoutHalfVerticalLeftSplit:
		return "half_vertical_left_split"
	case ExdLayoutHalfHorizontalTopSplit:
		return "half_horizontal_top_split"
	case ExdLayoutDynamic:
		return "dynamic"
	default:
		return "ExdLayoutInvalid(" + strconv.Itoa(int(e)) + ")"
	}
}

// FromString parse string into ExdLayout constant it's represent, return ExdLayoutInvalid if not found.
func ExdLayoutFromString(s string) ExdLayout {
	switch s {
	case "full_screen":
		return ExdLayoutFullScreen
	case "half_vertical":
		return ExdLayoutHalfVertical
	case "half_horizontal":
		return ExdLayoutHalfHorizontal
	case "half_vertical_right_split":
		return ExdLayoutHalfVerticalRightSplit
	case "half_horizontal_bottom_split":
		return ExdLayoutHalfHorizontalBottomSplit
	case "full_quarter_split":
		return ExdLayoutFullQuarterSplit
	case "half_vertical_left_split":
		return ExdLayoutHalfVerticalLeftSplit
	case "half_horizontal_top_split":
		return ExdLayoutHalfHorizontalTopSplit
	case "dynamic":
		return ExdLayoutDynamic
	default:
		return ExdLayoutInvalid
	}
}

// List returns all constants.
func ListExdLayout() []ExdLayout {
	return []ExdLayout{
		ExdLayoutFullScreen,
		ExdLayoutHalfVertical,
		ExdLayoutHalfHorizontal,
		ExdLayoutHalfVerticalRightSplit,
		ExdLayoutHalfHorizontalBottomSplit,
		ExdLayoutFullQuarterSplit,
		ExdLayoutHalfVerticalLeftSplit,
		ExdLayoutHalfHorizontalTopSplit,
		ExdLayoutDynamic,
	}
}
