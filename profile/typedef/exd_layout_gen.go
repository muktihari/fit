// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type ExdLayout byte

const (
	ExdLayoutFullScreen                ExdLayout = 0
	ExdLayoutHalfVertical              ExdLayout = 1
	ExdLayoutHalfHorizontal            ExdLayout = 2
	ExdLayoutHalfVerticalRightSplit    ExdLayout = 3
	ExdLayoutHalfHorizontalBottomSplit ExdLayout = 4
	ExdLayoutFullQuarterSplit          ExdLayout = 5
	ExdLayoutHalfVerticalLeftSplit     ExdLayout = 6
	ExdLayoutHalfHorizontalTopSplit    ExdLayout = 7
	ExdLayoutDynamic                   ExdLayout = 8    // The EXD may display the configured concepts in any layout it sees fit.
	ExdLayoutInvalid                   ExdLayout = 0xFF // INVALID
)

var exdlayouttostrs = map[ExdLayout]string{
	ExdLayoutFullScreen:                "full_screen",
	ExdLayoutHalfVertical:              "half_vertical",
	ExdLayoutHalfHorizontal:            "half_horizontal",
	ExdLayoutHalfVerticalRightSplit:    "half_vertical_right_split",
	ExdLayoutHalfHorizontalBottomSplit: "half_horizontal_bottom_split",
	ExdLayoutFullQuarterSplit:          "full_quarter_split",
	ExdLayoutHalfVerticalLeftSplit:     "half_vertical_left_split",
	ExdLayoutHalfHorizontalTopSplit:    "half_horizontal_top_split",
	ExdLayoutDynamic:                   "dynamic",
	ExdLayoutInvalid:                   "invalid",
}

func (e ExdLayout) String() string {
	val, ok := exdlayouttostrs[e]
	if !ok {
		return strconv.Itoa(int(e))
	}
	return val
}

var strtoexdlayout = func() map[string]ExdLayout {
	m := make(map[string]ExdLayout)
	for t, str := range exdlayouttostrs {
		m[str] = ExdLayout(t)
	}
	return m
}()

// FromString parse string into ExdLayout constant it's represent, return ExdLayoutInvalid if not found.
func ExdLayoutFromString(s string) ExdLayout {
	val, ok := strtoexdlayout[s]
	if !ok {
		return strtoexdlayout["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListExdLayout() []ExdLayout {
	vs := make([]ExdLayout, 0, len(exdlayouttostrs))
	for i := range exdlayouttostrs {
		vs = append(vs, ExdLayout(i))
	}
	return vs
}
