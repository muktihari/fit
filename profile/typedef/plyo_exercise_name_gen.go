// Code generated by internal/cmd/fitgen/main.go. DO NOT EDIT.
// SDK Version: 21.126

// Copyright 2023 The Fit SDK for Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package typedef

import (
	"strconv"
)

type PlyoExerciseName uint16

const (
	PlyoExerciseNameAlternatingJumpLunge                  PlyoExerciseName = 0
	PlyoExerciseNameWeightedAlternatingJumpLunge          PlyoExerciseName = 1
	PlyoExerciseNameBarbellJumpSquat                      PlyoExerciseName = 2
	PlyoExerciseNameBodyWeightJumpSquat                   PlyoExerciseName = 3
	PlyoExerciseNameWeightedJumpSquat                     PlyoExerciseName = 4
	PlyoExerciseNameCrossKneeStrike                       PlyoExerciseName = 5
	PlyoExerciseNameWeightedCrossKneeStrike               PlyoExerciseName = 6
	PlyoExerciseNameDepthJump                             PlyoExerciseName = 7
	PlyoExerciseNameWeightedDepthJump                     PlyoExerciseName = 8
	PlyoExerciseNameDumbbellJumpSquat                     PlyoExerciseName = 9
	PlyoExerciseNameDumbbellSplitJump                     PlyoExerciseName = 10
	PlyoExerciseNameFrontKneeStrike                       PlyoExerciseName = 11
	PlyoExerciseNameWeightedFrontKneeStrike               PlyoExerciseName = 12
	PlyoExerciseNameHighBoxJump                           PlyoExerciseName = 13
	PlyoExerciseNameWeightedHighBoxJump                   PlyoExerciseName = 14
	PlyoExerciseNameIsometricExplosiveBodyWeightJumpSquat PlyoExerciseName = 15
	PlyoExerciseNameWeightedIsometricExplosiveJumpSquat   PlyoExerciseName = 16
	PlyoExerciseNameLateralLeapAndHop                     PlyoExerciseName = 17
	PlyoExerciseNameWeightedLateralLeapAndHop             PlyoExerciseName = 18
	PlyoExerciseNameLateralPlyoSquats                     PlyoExerciseName = 19
	PlyoExerciseNameWeightedLateralPlyoSquats             PlyoExerciseName = 20
	PlyoExerciseNameLateralSlide                          PlyoExerciseName = 21
	PlyoExerciseNameWeightedLateralSlide                  PlyoExerciseName = 22
	PlyoExerciseNameMedicineBallOverheadThrows            PlyoExerciseName = 23
	PlyoExerciseNameMedicineBallSideThrow                 PlyoExerciseName = 24
	PlyoExerciseNameMedicineBallSlam                      PlyoExerciseName = 25
	PlyoExerciseNameSideToSideMedicineBallThrows          PlyoExerciseName = 26
	PlyoExerciseNameSideToSideShuffleJump                 PlyoExerciseName = 27
	PlyoExerciseNameWeightedSideToSideShuffleJump         PlyoExerciseName = 28
	PlyoExerciseNameSquatJumpOntoBox                      PlyoExerciseName = 29
	PlyoExerciseNameWeightedSquatJumpOntoBox              PlyoExerciseName = 30
	PlyoExerciseNameSquatJumpsInAndOut                    PlyoExerciseName = 31
	PlyoExerciseNameWeightedSquatJumpsInAndOut            PlyoExerciseName = 32
	PlyoExerciseNameInvalid                               PlyoExerciseName = 0xFFFF // INVALID
)

var plyoexercisenametostrs = map[PlyoExerciseName]string{
	PlyoExerciseNameAlternatingJumpLunge:                  "alternating_jump_lunge",
	PlyoExerciseNameWeightedAlternatingJumpLunge:          "weighted_alternating_jump_lunge",
	PlyoExerciseNameBarbellJumpSquat:                      "barbell_jump_squat",
	PlyoExerciseNameBodyWeightJumpSquat:                   "body_weight_jump_squat",
	PlyoExerciseNameWeightedJumpSquat:                     "weighted_jump_squat",
	PlyoExerciseNameCrossKneeStrike:                       "cross_knee_strike",
	PlyoExerciseNameWeightedCrossKneeStrike:               "weighted_cross_knee_strike",
	PlyoExerciseNameDepthJump:                             "depth_jump",
	PlyoExerciseNameWeightedDepthJump:                     "weighted_depth_jump",
	PlyoExerciseNameDumbbellJumpSquat:                     "dumbbell_jump_squat",
	PlyoExerciseNameDumbbellSplitJump:                     "dumbbell_split_jump",
	PlyoExerciseNameFrontKneeStrike:                       "front_knee_strike",
	PlyoExerciseNameWeightedFrontKneeStrike:               "weighted_front_knee_strike",
	PlyoExerciseNameHighBoxJump:                           "high_box_jump",
	PlyoExerciseNameWeightedHighBoxJump:                   "weighted_high_box_jump",
	PlyoExerciseNameIsometricExplosiveBodyWeightJumpSquat: "isometric_explosive_body_weight_jump_squat",
	PlyoExerciseNameWeightedIsometricExplosiveJumpSquat:   "weighted_isometric_explosive_jump_squat",
	PlyoExerciseNameLateralLeapAndHop:                     "lateral_leap_and_hop",
	PlyoExerciseNameWeightedLateralLeapAndHop:             "weighted_lateral_leap_and_hop",
	PlyoExerciseNameLateralPlyoSquats:                     "lateral_plyo_squats",
	PlyoExerciseNameWeightedLateralPlyoSquats:             "weighted_lateral_plyo_squats",
	PlyoExerciseNameLateralSlide:                          "lateral_slide",
	PlyoExerciseNameWeightedLateralSlide:                  "weighted_lateral_slide",
	PlyoExerciseNameMedicineBallOverheadThrows:            "medicine_ball_overhead_throws",
	PlyoExerciseNameMedicineBallSideThrow:                 "medicine_ball_side_throw",
	PlyoExerciseNameMedicineBallSlam:                      "medicine_ball_slam",
	PlyoExerciseNameSideToSideMedicineBallThrows:          "side_to_side_medicine_ball_throws",
	PlyoExerciseNameSideToSideShuffleJump:                 "side_to_side_shuffle_jump",
	PlyoExerciseNameWeightedSideToSideShuffleJump:         "weighted_side_to_side_shuffle_jump",
	PlyoExerciseNameSquatJumpOntoBox:                      "squat_jump_onto_box",
	PlyoExerciseNameWeightedSquatJumpOntoBox:              "weighted_squat_jump_onto_box",
	PlyoExerciseNameSquatJumpsInAndOut:                    "squat_jumps_in_and_out",
	PlyoExerciseNameWeightedSquatJumpsInAndOut:            "weighted_squat_jumps_in_and_out",
	PlyoExerciseNameInvalid:                               "invalid",
}

func (p PlyoExerciseName) String() string {
	val, ok := plyoexercisenametostrs[p]
	if !ok {
		return strconv.FormatUint(uint64(p), 10)
	}
	return val
}

var strtoplyoexercisename = func() map[string]PlyoExerciseName {
	m := make(map[string]PlyoExerciseName)
	for t, str := range plyoexercisenametostrs {
		m[str] = PlyoExerciseName(t)
	}
	return m
}()

// FromString parse string into PlyoExerciseName constant it's represent, return PlyoExerciseNameInvalid if not found.
func PlyoExerciseNameFromString(s string) PlyoExerciseName {
	val, ok := strtoplyoexercisename[s]
	if !ok {
		return strtoplyoexercisename["invalid"]
	}
	return val
}

// List returns all constants. The result might be unsorted (depend on stringer is in array or map), it's up to the caller to sort.
func ListPlyoExerciseName() []PlyoExerciseName {
	vs := make([]PlyoExerciseName, 0, len(plyoexercisenametostrs))
	for i := range plyoexercisenametostrs {
		vs = append(vs, PlyoExerciseName(i))
	}
	return vs
}
